{"version":3,"sources":["components/Navbar.js","components/SideDrawer.js","components/Backdrop.js","components/Product.js","redux/constants/productConstants.js","screens/HomeScreen.js","redux/actions/productActions.js","redux/constants/cartConstants.js","redux/actions/cartActions.js","screens/ProductScreen.js","components/CartItem.js","components/Paypal.js","screens/CartScreen.js","App.js","reportWebVitals.js","redux/reducers/cartReducers.js","redux/store.js","redux/reducers/productReducers.js","index.js"],"names":["Navbar","click","cartItems","useSelector","state","cart","className","to","reduce","qty","item","Number","onClick","SideDrawer","show","sideDrawerClass","push","join","Backdrop","Product","imageUrl","description","price","name","productId","src","alt","substring","GET_PRODUCTS_REQUEST","GET_PRODUCTS_SUCCESS","GET_PRODUCTS_FAIL","GET_PRODUCT_DETAILS_REQUEST","GET_PRODUCT_DETAILS_SUCCESS","GET_PRODUCT_DETAILS_FAIL","GET_PRODUCT_DETAILS_RESET","HomeScreen","dispatch","useDispatch","getProducts","products","loading","error","useEffect","a","type","actionTypes","axios","get","data","payload","response","message","map","product","_id","ADD_TO_CART","REMOVE_FROM_CART","DELETE_THE_CART","addToCart","id","getState","countInStock","localStorage","setItem","JSON","stringify","ProductScreen","match","history","useState","setQty","productDetails","getProductDetails","params","value","onChange","e","target","Array","keys","x","CartItem","qtyChangeHandler","removeHandler","MyApp","total","this","props","toPay","env","client","sandbox","production","currency","onError","err","console","log","onSuccess","payment","onCancel","style","size","color","shape","React","Component","CartScreen","removeFromCartHandler","removeFromCart","emptyCart","getCartSubTotal","toFixed","handleSubmit","event","preventDefault","length","variables","cartdetails","paymentData","post","then","transactionError","transactionCanceleld","onSubmit","App","sideToggle","setSideToggle","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","CART_INITIAL_STATE","reducer","combineReducers","action","existItem","find","filter","middleware","thunk","INITIAL_STATE","getItem","parse","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.88566595.chunk.js","sourcesContent":["import \"./Navbar.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst Navbar = ({ click }) => {\r\n  const cart = useSelector((state) => state.cart);\r\n  const { cartItems } = cart;\r\n\r\n  const getCartCount = () => {\r\n    return cartItems.reduce((qty, item) => Number(item.qty) + qty, 0);\r\n  };\r\n\r\n  return (\r\n    <nav className=\"navbar\">\r\n      <div className=\"navbar__logo\">\r\n        <Link to=\"/\">\r\n        <h2>Ecommerce M3G</h2>\r\n        </Link>\r\n      </div>\r\n\r\n      <ul className=\"navbar__links\">\r\n        <li>\r\n          <Link to=\"/cart\" className=\"cart__link\">\r\n            <i className=\"fas fa-shopping-cart\"></i>\r\n            <span>\r\n              Cart <span className=\"cartlogo__badge\">{getCartCount()}</span>\r\n            </span>\r\n          </Link>\r\n        </li>\r\n        <li>\r\n          <Link to=\"/\">Shop</Link>\r\n        </li>\r\n      </ul>\r\n\r\n      <div className=\"hamburger__menu\" onClick={click}>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import { Link } from 'react-router-dom';\r\nimport './SideDrawer.css';\r\n\r\nconst SideDrawer = ({show, click}) =>{\r\n    const sideDrawerClass = [\"sidedrawer\"];\r\n\r\n    if(show){\r\n        sideDrawerClass.push(\"show\");\r\n    }\r\n    return (\r\n        <div className={sideDrawerClass.join(\" \")}>\r\n            <ul className=\"sidedrawer__links\" onClick={click}>\r\n                <li>\r\n                    <Link to=\"/cart\">\r\n                        <i className=\"fas fa-shopping-cart\"></i>\r\n                        <span>\r\n                            Cart<span className=\"sidedrawer__cartbadge\">0</span>\r\n                        </span>\r\n                    </Link>\r\n                </li>\r\n                <li>\r\n                    <Link to=\"/\"> Shop\r\n                    </Link>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SideDrawer;","import \"./Backdrop.css\";\r\n\r\nconst Backdrop = ({ click, show }) => {\r\n  return show && <div className=\"backdrop\" onClick={click}></div>;\r\n};\r\n\r\nexport default Backdrop;\r\n","import \"./Product.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Product = ({ imageUrl, description, price, name, productId }) => {\r\n  return (\r\n    <div className=\"product\">\r\n      <img src={imageUrl} alt={name} />\r\n\r\n      <div className=\"product__info\">\r\n        <p className=\"info__name\">{name}</p>\r\n\r\n        <p className=\"info__description\">{description.substring(0, 100)}...</p>\r\n\r\n        <p className=\"info__price\">${price}</p>\r\n\r\n        <Link to={`/product/${productId}`} className=\"info__button\">\r\n          View\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Product;\r\n","export const GET_PRODUCTS_REQUEST = \"GET_PRODUCTS_REQUEST\";\r\nexport const GET_PRODUCTS_SUCCESS = \"GET_PRODUCTS_SUCCESS\";\r\nexport const GET_PRODUCTS_FAIL = \"GET_PRODUCTS_FAIL\";\r\n\r\nexport const GET_PRODUCT_DETAILS_REQUEST = \"GET_PRODUCT_DETAILS_REQUEST\";\r\nexport const GET_PRODUCT_DETAILS_SUCCESS = \"GET_PRODUCT_DETAILS_SUCCESS\";\r\nexport const GET_PRODUCT_DETAILS_FAIL = \"GET_PRODUCT_DETAILS_FAIL\";\r\nexport const GET_PRODUCT_DETAILS_RESET = \"GET_PRODUCT_DETAILS_RESET\";\r\n","import \"./HomeScreen.css\";\r\nimport { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\n// Components\r\nimport Product from \"../components/Product\";\r\n\r\n//Actions\r\nimport { getProducts as listProducts } from \"../redux/actions/productActions\";\r\n\r\nconst HomeScreen = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const getProducts = useSelector((state) => state.getProducts);\r\n  const { products, loading, error } = getProducts;\r\n\r\n  useEffect(() => {\r\n    dispatch(listProducts());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <div className=\"homescreen\">\r\n      <h2 className=\"homescreen__title\">Latest Products</h2><hr></hr>\r\n      <div className=\"homescreen__products\">\r\n        {loading ? (\r\n          <h2>Loading..</h2>\r\n        ) : error ? (\r\n          <h2>{error}</h2>\r\n        ) : (\r\n          products.map((product) => (\r\n            <Product\r\n              key={product._id}\r\n              name={product.name}\r\n              description={product.description}\r\n              price={product.price}\r\n              imageUrl={product.imageUrl}\r\n              productId={product._id}\r\n            />\r\n          ))\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomeScreen;\r\n","import * as actionTypes from \"../constants/productConstants\";\r\nimport axios from \"axios\";\r\n\r\nexport const getProducts = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: actionTypes.GET_PRODUCTS_REQUEST });\r\n\r\n    const { data } = await axios.get(\"/api/products\");\r\n\r\n    dispatch({\r\n      type: actionTypes.GET_PRODUCTS_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: actionTypes.GET_PRODUCTS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getProductDetails = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: actionTypes.GET_PRODUCT_DETAILS_REQUEST });\r\n\r\n    const { data } = await axios.get(`/api/products/${id}`);\r\n\r\n    dispatch({\r\n      type: actionTypes.GET_PRODUCT_DETAILS_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: actionTypes.GET_PRODUCT_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const removeProductDetails = () => (dispatch) => {\r\n  dispatch({ type: actionTypes.GET_PRODUCT_DETAILS_RESET });\r\n};\r\n","export const ADD_TO_CART = \"ADD_TO_CART\";\r\nexport const REMOVE_FROM_CART = \"REMOVE_FROM_CART\";\r\nexport const CART_RESET = \"CART_RESET\";\r\nexport const DELETE_THE_CART = \"DELETE_THE_CART\"","import * as actionTypes from \"../constants/cartConstants\";\r\nimport axios from \"axios\";\r\n\r\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\r\n const { data } = await axios.get(`/api/products/${id}`);\r\n \r\n  //fetch(`/api/products/${id}`).then((res) => res.json()).then((data) => datas = data );\r\n\r\n  dispatch({\r\n    type: actionTypes.ADD_TO_CART,\r\n    payload: {\r\n      product: data._id,\r\n      name: data.name,\r\n      imageUrl: data.imageUrl,\r\n      price: data.price,\r\n      countInStock: data.countInStock,\r\n      qty,\r\n    },\r\n  });\r\n\r\n  localStorage.setItem(\"cart\", JSON.stringify(getState().cart.cartItems));\r\n};\r\n\r\nexport const removeFromCart = (id) => (dispatch, getState) => {\r\n  dispatch({\r\n    type: actionTypes.REMOVE_FROM_CART,\r\n    payload: id,\r\n  });\r\n\r\n  localStorage.setItem(\"cart\", JSON.stringify(getState().cart.cartItems));\r\n};\r\n\r\n\r\nexport const emptyTheCart = () => (dispatch, getState) => {\r\n  console.log(\"im here\\n\");\r\n  dispatch({\r\n    type: actionTypes.DELETE_THE_CART,\r\n  });\r\n\r\n  localStorage.setItem(\"cart\", JSON.stringify(getState().cart.cartItems));\r\n};","import \"./ProductScreen.css\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\n// Actions\r\nimport { getProductDetails } from \"../redux/actions/productActions\";\r\nimport { addToCart } from \"../redux/actions/cartActions\";\r\n\r\nconst ProductScreen = ({ match, history }) => {\r\n  const [qty, setQty] = useState(1);\r\n  const dispatch = useDispatch();\r\n\r\n  const productDetails = useSelector((state) => state.getProductDetails);\r\n  const { loading, error, product } = productDetails;\r\n\r\n  useEffect(() => {\r\n    if (product && match.params.id !== product._id) {\r\n      dispatch(getProductDetails(match.params.id));\r\n    }\r\n  }, [dispatch, match, product]);\r\n\r\n  const addToCartHandler = () => {\r\n    dispatch(addToCart(product._id, qty));\r\n    history.push(`/cart`);\r\n  };\r\n\r\n  return (\r\n    <div className=\"productscreen\">\r\n      {loading ? (\r\n        <h2>Loading...</h2>\r\n      ) : error ? (\r\n        <h2>{error}</h2>\r\n      ) : (\r\n        <>\r\n          <div className=\"productscreen__left\">\r\n            <div className=\"left__image\">\r\n              <img src={product.imageUrl} alt={product.name} />\r\n            </div>\r\n            <div className=\"left__info\">\r\n              <p className=\"left__name\">PlayStation 5</p>\r\n              <p>Price: ${product.price}</p>\r\n              <p>Description: {product.description}</p>\r\n            </div>\r\n          </div>\r\n          <div className=\"productscreen__right\">\r\n            <div className=\"right__info\">\r\n              <p>\r\n                Price:\r\n                <span>${product.price}</span>\r\n              </p>\r\n              <p>\r\n                Status:\r\n                <span>\r\n                  {product.countInStock > 0 ? \"In Stock\" : \"Out of Stock\"}\r\n                </span>\r\n              </p>\r\n              <p>\r\n                Qty\r\n                <select value={qty} onChange={(e) => setQty(e.target.value)}>\r\n                  {[...Array(product.countInStock).keys()].map((x) => (\r\n                    <option key={x + 1} value={x + 1}>\r\n                      {x + 1}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n              </p>\r\n              <p>\r\n                <button type=\"button\" onClick={addToCartHandler}>\r\n                  Add To Cart\r\n                </button>\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductScreen;\r\n","import \"./CartItem.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst CartItem = ({ item, qtyChangeHandler, removeHandler }) => {\r\n  return (\r\n    <div className=\"cartitem\">\r\n      <div className=\"cartitem__image\">\r\n        <img src={item.imageUrl} alt={item.name} />\r\n      </div>\r\n      <Link to={`/product/${item.product}`} className=\"cartItem__name\">\r\n        <p>{item.name}</p>\r\n      </Link>\r\n      <p className=\"cartitem__price\">${item.price}</p>\r\n      <select\r\n        value={item.qty}\r\n        onChange={(e) => qtyChangeHandler(item.product, e.target.value)}\r\n        className=\"cartItem__select\"\r\n      >\r\n        {[...Array(item.countInStock).keys()].map((x) => (\r\n          <option key={x + 1} value={x + 1}>\r\n            {x + 1}\r\n          </option>\r\n        ))}\r\n      </select>\r\n      <button\r\n        className=\"cartItem__deleteBtn\"\r\n        onClick={() => removeHandler(item.product)}\r\n      >\r\n        <i className=\"fas fa-trash\"></i>\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CartItem;\r\n","import React from 'react';\r\nimport PaypalExpressBtn from 'react-paypal-express-checkout';\r\n\r\n\r\n\r\nexport default class MyApp extends React.Component {\r\n\r\n\r\n    render() {\r\n        \r\n        const onSuccess = (payment) => {\r\n                    \r\n            // Congratulation, it came here means everything's fine!\r\n            \t\tconsole.log(\"The payment was succeeded!\", payment);\r\n            \t\t// You can bind the \"payment\" object's value to your state or props or whatever here, please see below for sample returned data\r\n                    this.props.onSuccess(payment);\r\n        }\r\n \r\n        const onCancel = (data) => {\r\n            // User pressed \"cancel\" or close Paypal's popup!\r\n            console.log('The payment was cancelled!', data);\r\n            // You can bind the \"data\" object's value to your state or props or whatever here, please see below for sample returned data\r\n        }\r\n \r\n        const onError = (err) => {\r\n            // The main Paypal's script cannot be loaded or somethings block the loading of that script!\r\n            console.log(\"Error!\", err);\r\n            // Because the Paypal's main script is loaded asynchronously from \"https://www.paypalobjects.com/api/checkout.js\"\r\n            // => sometimes it may take about 0.5 second for everything to get set, or for the button to appear\r\n        }\r\n \r\n        let env = 'sandbox'; // you can set here to 'production' for production\r\n        let currency = 'USD'; // or you can set this value from your props or state\r\n        let total = Number(this.props.toPay); // same as above, this is the total amount (based on currency) to be paid by using Paypal express checkout\r\n        // Document on Paypal's currency code: https://developer.paypal.com/docs/classic/api/currency_codes/\r\n    \r\n        const client = {\r\n            sandbox:    'ASbC3CVtAZl4icx8S8dwQ2UQuSgHurczlwxsRurbIBAnnKdvyJMyGJAKhcID4NS6uQ7XV2do40L8zquh',\r\n            production: 'YOUR-PRODUCTION-APP-ID',\r\n        }\r\n        // In order to get production's app-ID, you will have to send your app to Paypal for approval first\r\n        // For sandbox app-ID (after logging into your developer account, please locate the \"REST API apps\" section, click \"Create App\"):\r\n        //   => https://developer.paypal.com/docs/classic/lifecycle/sb_credentials/\r\n        // For production app-ID:\r\n        //   => https://developer.paypal.com/docs/classic/lifecycle/goingLive/\r\n \r\n        // NB. You can also have many Paypal express checkout buttons on page, just pass in the correct amount and they will work!\r\n        return (\r\n            <PaypalExpressBtn\r\n            env={env} \r\n            client={client} \r\n            currency={currency} \r\n            total={total} \r\n            onError={onError} \r\n            onSuccess={onSuccess} \r\n            onCancel={onCancel} \r\n            style={\r\n                {\r\n                    size:'large',\r\n                    color:'blue',\r\n                    shape:'rect'\r\n                }\r\n            }/>\r\n        );\r\n    }\r\n}","import \"./CartScreen.css\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n// Components\r\nimport CartItem from \"../components/CartItem\";\r\nimport Paypal from \"../components/Paypal\";\r\n// Actions\r\nimport { addToCart, removeFromCart, emptyTheCart } from \"../redux/actions/cartActions\";\r\nimport axios from \"axios\";\r\n\r\nconst CartScreen = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const cart = useSelector((state) => state.cart);\r\n  const { cartItems } = cart;\r\n\r\n\r\n  const qtyChangeHandler = (id, qty) => {\r\n    dispatch(addToCart(id, qty));\r\n  };\r\n\r\n  const removeFromCartHandler = (id) => {\r\n    dispatch(removeFromCart(id));\r\n  };\r\n\r\n  const emptyCart = () => {\r\n    dispatch(emptyTheCart());\r\n  }\r\n  const getCartCount = () => {\r\n    return cartItems.reduce((qty, item) => Number(item.qty) + qty, 0);\r\n  };\r\n\r\n  const getCartSubTotal = () => {\r\n    return cartItems\r\n      .reduce((price, item) => price + item.price * item.qty, 0)\r\n      .toFixed(2);\r\n  };\r\n\r\n  const transactionSuccess = (data) => {\r\n      let variables = {\r\n        cartdetails: cartItems, paymentData: data\r\n      }\r\n\r\n      console.log(variables);\r\n\r\n      axios.post('/api/products/order', variables).then(response => \r\n        {\r\n           \r\n        }\r\n      )\r\n\r\n      console.log(\"im in post\");\r\n      emptyCart();\r\n      \r\n  }\r\n  const transactionError = () => {\r\n\r\n  }\r\n\r\n  const transactionCanceleld = () => {\r\n\r\n  }\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n  }\r\n  return (\r\n    <>\r\n      <div className=\"cartscreen\">\r\n        <div className=\"cartscreen__left\">\r\n          <h2>Shopping Cart</h2>\r\n\r\n          {cartItems.length === 0 ? (\r\n            <div>\r\n              Your Cart Is Empty <Link to=\"/\">Go Back</Link>\r\n            </div>\r\n          ) : (\r\n            cartItems.map((item) => (\r\n              <CartItem\r\n                key={item.product}\r\n                item={item}\r\n                qtyChangeHandler={qtyChangeHandler}\r\n                removeHandler={removeFromCartHandler}\r\n              />\r\n            ))\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"cartscreen__right\">\r\n          <div className=\"cartscreen__info\">\r\n            <p>Subtotal ({getCartCount()}) items</p>\r\n            <p>${getCartSubTotal()}</p>\r\n          </div>\r\n          <div >\r\n            <Paypal toPay={getCartSubTotal()}\r\n            onSuccess={transactionSuccess}\r\n            transactionError ={transactionError}\r\n            transactionCanceleld={transactionCanceleld} onSubmit={handleSubmit}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CartScreen;\r\n","import \"./App.css\";\nimport { useState } from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\n// Components\nimport Navbar from \"./components/Navbar\";\nimport SideDrawer from \"./components/SideDrawer\";\nimport Backdrop from \"./components/Backdrop\";\n\n// Screens\nimport HomeScreen from \"./screens/HomeScreen\";\nimport ProductScreen from \"./screens/ProductScreen\";\nimport CartScreen from \"./screens/CartScreen\";\n\nfunction App() {\n  const [sideToggle, setSideToggle] = useState(false);\n\n  return (\n    <Router>\n      <Navbar click={() => setSideToggle(true)} />\n      <SideDrawer show={sideToggle} click={() => setSideToggle(false)} />\n      <Backdrop show={sideToggle} click={() => setSideToggle(false)} />\n      <main className=\"app\">\n        <Switch>\n          <Route exact path=\"/\" component={HomeScreen} />\n          <Route exact path=\"/product/:id\" component={ProductScreen} />\n          <Route exact path=\"/cart\" component={CartScreen} />\n          <Route exact path=\"/order\" component={CartScreen}></Route>\n        </Switch>\n      </main>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import * as actionTypes from \"../constants/cartConstants\";\r\n\r\nconst CART_INITIAL_STATE = {\r\n  cartItems: [],\r\n};\r\n\r\nexport const cartReducer = (state = CART_INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.ADD_TO_CART:\r\n      const item = action.payload;\r\n\r\n      const existItem = state.cartItems.find((x) => x.product === item.product);\r\n\r\n      if (existItem) {\r\n        return {\r\n          ...state,\r\n          cartItems: state.cartItems.map((x) =>\r\n            x.product === existItem.product ? item : x\r\n          ),\r\n        };\r\n      } else {\r\n        return {\r\n          ...state,\r\n          cartItems: [...state.cartItems, item],\r\n        };\r\n      }\r\n    case actionTypes.REMOVE_FROM_CART:\r\n      return {\r\n        ...state,\r\n        cartItems: state.cartItems.filter((x) => x.product !== action.payload),\r\n      };\r\n\r\n    case actionTypes.DELETE_THE_CART:\r\n      return {\r\n        ...state,\r\n        cartItems: []\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\n\r\n// Reducers\r\nimport { cartReducer } from \"./reducers/cartReducers\";\r\nimport {\r\n  getProductsReducer,\r\n  getProductDetailsReducer,\r\n} from \"./reducers/productReducers\";\r\n\r\nconst reducer = combineReducers({\r\n  cart: cartReducer,\r\n  getProducts: getProductsReducer,\r\n  getProductDetails: getProductDetailsReducer,\r\n  \r\n});\r\n\r\nconst middleware = [thunk];\r\n\r\nconst cartItemsInLocalStorage = localStorage.getItem(\"cart\")\r\n  ? JSON.parse(localStorage.getItem(\"cart\"))\r\n  : [];\r\n\r\n\r\nconst INITIAL_STATE = {\r\n  cart: {\r\n    cartItems: cartItemsInLocalStorage,\r\n  },\r\n \r\n};\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  INITIAL_STATE,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import * as actionTypes from \"../constants/productConstants\";\r\n\r\nexport const getProductsReducer = (state = { products: [] }, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.GET_PRODUCTS_REQUEST:\r\n      return {\r\n        loading: true,\r\n        products: [],\r\n      };\r\n    case actionTypes.GET_PRODUCTS_SUCCESS:\r\n      return {\r\n        products: action.payload,\r\n        loading: false,\r\n      };\r\n    case actionTypes.GET_PRODUCTS_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const getProductDetailsReducer = (state = { product: {} }, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.GET_PRODUCT_DETAILS_REQUEST:\r\n      return {\r\n        loading: true,\r\n      };\r\n    case actionTypes.GET_PRODUCT_DETAILS_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        product: action.payload,\r\n      };\r\n    case actionTypes.GET_PRODUCT_DETAILS_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n    case actionTypes.GET_PRODUCT_DETAILS_RESET:\r\n      return {\r\n        product: {},\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from 'react-redux';\nimport store from \"./redux/store\"\n\nReactDOM.render(\n  <Provider store={store}>\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}